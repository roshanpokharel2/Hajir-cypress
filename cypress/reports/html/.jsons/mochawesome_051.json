{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-19T08:54:56.701Z",
    "end": "2024-03-19T08:54:58.113Z",
    "duration": 1412,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "21ebec47-bd75-41bb-b4ae-549a22214d85",
      "title": "",
      "fullFile": "cypress\\e2e\\ApiTesting\\Employeer\\Plans-package\\e-get-allactiveplanspack.cy.js",
      "file": "cypress\\e2e\\ApiTesting\\Employeer\\Plans-package\\e-get-allactiveplanspack.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f3458ed8-8b85-4ca1-bf96-d3ceba3de607",
          "title": "get all active plans pack ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to get all active plans pack",
              "fullTitle": "get all active plans pack  should be able to get all active plans pack",
              "timedOut": null,
              "duration": 1165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://veloxlabs.net/api/v2/employer/package/all',\n  headers: {\n    'Authorization': _constants.empToken\n  }\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.status).to.equal('success');\n  expect(response.body.message).to.equal('Successfully Fetched');\n  // Assert the structure of the 'data' object\n  expect(response.body.data).to.exist;\n  expect(response.body.data).to.have.property('packages').that.is.an('array').and.not.empty;\n  // Assert properties of each package\n  const packages = response.body.data.packages;\n  packages.forEach(pkg => {\n    expect(pkg).to.have.property('id').that.is.a('number');\n    expect(pkg).to.have.property('title').that.is.a('string').and.not.empty;\n    expect(pkg).to.have.property('status').that.is.a('string').and.equal('Active');\n    expect(pkg).to.have.property('price').that.is.a('number').and.at.least(0);\n    expect(pkg).to.have.property('remarks').that.is.a('string');\n    expect(pkg).to.have.property('feature').that.is.an('array').and.not.empty;\n    pkg.feature.forEach(feature => {\n      expect(feature).to.be.a('string').and.not.empty;\n    });\n  });\n});",
              "err": {},
              "uuid": "61ecf33c-613f-417b-af58-cbb29b43ddd4",
              "parentUUID": "f3458ed8-8b85-4ca1-bf96-d3ceba3de607",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61ecf33c-613f-417b-af58-cbb29b43ddd4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1165,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}