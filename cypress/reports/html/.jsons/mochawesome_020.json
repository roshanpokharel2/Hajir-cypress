{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-19T08:44:15.380Z",
    "end": "2024-03-19T08:44:26.245Z",
    "duration": 10865,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "82eab630-cbd9-498c-8624-266bafbfa240",
      "title": "",
      "fullFile": "cypress\\e2e\\ApiTesting\\Candidate\\Authentication\\c-get-companiesinfo.cy.js",
      "file": "cypress\\e2e\\ApiTesting\\Candidate\\Authentication\\c-get-companiesinfo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "99d38383-4900-4a00-a998-ba896afbec1a",
          "title": "GET companies info",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show companies info",
              "fullTitle": "GET companies info should show companies info",
              "timedOut": null,
              "duration": 8224,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://veloxlabs.net/api/v2/candidate/companies-info',\n  headers: {\n    'Authorization': _constants.canToken\n  }\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.status).to.equal(\"success\");\n  expect(response.body.message).to.equal(\"Successfully Fetched\");\n  expect(response.body.data).to.be.an('array').that.has.lengthOf.at.least(1);\n  response.body.data.forEach(company => {\n    expect(company.id).to.be.a('number');\n    expect(company.company_id).to.be.a('number');\n    expect(company.candidate_id).to.be.a('number');\n    expect(company.company_name).to.be.a('string');\n    expect(company.company_status).to.be.a('string');\n    expect(company.code).to.be.a('string');\n    expect(company.designation).to.be.a('string');\n    expect(company.marriage_status).to.be.a('string');\n    expect(company.salary_type).to.be.a('string');\n    expect(company.salary).to.be.a('string');\n    expect(company.verified_status).to.be.a('string');\n    expect(company.status).to.be.a('string');\n    expect(company.is_approver).to.be.a('boolean');\n    expect(company.salary_amount).to.be.a('number');\n    expect(company.allowance_amount).to.be.a('number');\n    expect(company.working_hours).to.be.a('string');\n    expect(company.duty_time).to.be.a('string');\n    expect(company.probation_period).to.be.a('number');\n    expect(company.break_duration).to.be.a('string');\n    expect(company.allow_late_attendance).to.be.a('string');\n    expect(company.overtime_ratio).to.be.a('number');\n    expect(company.overtime_hrs).to.be.a('number');\n    expect(company.casual_leave).to.be.a('number');\n    expect(company.sick_leave).to.be.a('number');\n    expect(company.allow_network_access).to.be.a('string');\n    expect(company.departments).to.be.an('array').that.has.lengthOf.at.least(1);\n    company.departments.forEach(department => {\n      expect(department.id).to.be.a('number');\n      expect(department.name).to.be.a('string');\n    });\n  });\n});",
              "err": {},
              "uuid": "5fad14a5-b69a-402b-867b-08d5d13f74e1",
              "parentUUID": "99d38383-4900-4a00-a998-ba896afbec1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fad14a5-b69a-402b-867b-08d5d13f74e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8224,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}