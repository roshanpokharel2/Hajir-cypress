{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-03-19T08:55:10.358Z",
    "end": "2024-03-19T08:55:11.357Z",
    "duration": 999,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "831e310a-c60f-4fc2-bbf8-a37c58e2dc3a",
      "title": "",
      "fullFile": "cypress\\e2e\\ApiTesting\\Employeer\\Plans-package\\e-get-paymentmethod.cy.js",
      "file": "cypress\\e2e\\ApiTesting\\Employeer\\Plans-package\\e-get-paymentmethod.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d03038ce-cb6f-4d3f-a6c5-96d576ee56e5",
          "title": "get payment method ",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to get payment method ",
              "fullTitle": "get payment method  should be able to get payment method ",
              "timedOut": null,
              "duration": 863,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'https://veloxlabs.net/api/v2/employer/package/get-payment-methods',\n  headers: {\n    'Authorization': _constants.empToken\n  }\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.status).to.equal('success');\n  expect(response.body.message).to.equal('Successfully Fetched');\n  // Assert the structure of the 'data' object\n  expect(response.body.data).to.exist;\n  expect(response.body.data).to.have.property('paymentMethods').that.is.an('array').and.not.empty;\n  // Assert properties of each payment method\n  const paymentMethods = response.body.data.paymentMethods;\n  paymentMethods.forEach(method => {\n    expect(method).to.have.property('id').that.is.a('number');\n    expect(method).to.have.property('title').that.is.a('string').and.not.empty;\n    expect(method).to.have.property('status').that.is.a('string').and.equal('Active');\n    expect(method).to.have.property('qr_image').that.is.a('string').and.not.empty;\n  });\n});",
              "err": {},
              "uuid": "0f051d6d-519c-470b-824c-329b4ff721f8",
              "parentUUID": "d03038ce-cb6f-4d3f-a6c5-96d576ee56e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f051d6d-519c-470b-824c-329b4ff721f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 863,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}